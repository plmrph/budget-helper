
# syntax=docker/dockerfile:1.7

FROM python:3.11-slim-bookworm AS builder
RUN apt-get -o Acquire::Retries=5 update && \
    apt-get install -y --no-install-recommends gcc g++ curl build-essential libgomp1 && \
    rm -rf /var/lib/apt/lists/*
WORKDIR /app
# Install uv in builder
COPY --from=ghcr.io/astral-sh/uv:0.4.18 /uv /usr/local/bin/uv

ENV UV_LINK_MODE=copy \
    UV_PROJECT_ENVIRONMENT=/opt/venv \
    PATH="/opt/venv/bin:${PATH}"

COPY pyproject.toml ./
COPY uv.lock* ./
RUN apt-get -o Acquire::Retries=5 update && \
    apt-get install -y --no-install-recommends gcc g++ curl build-essential && \
    uv sync && \
    apt-get purge -y --auto-remove gcc g++ curl build-essential && \
    rm -rf /var/lib/apt/lists/*

# Copy app code
COPY . .

# Final minimal image

FROM python:3.11-slim-bookworm
RUN apt-get -o Acquire::Retries=5 update && \
    apt-get install -y --no-install-recommends libgomp1 && \
    rm -rf /var/lib/apt/lists/*
WORKDIR /app

# Install uv in final image
COPY --from=ghcr.io/astral-sh/uv:0.4.18 /uv /usr/local/bin/uv

ENV UV_LINK_MODE=copy \
    UV_PROJECT_ENVIRONMENT=/opt/venv \
    PATH="/opt/venv/bin:${PATH}"

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
# Copy app code
COPY --from=builder /app .

EXPOSE 8000
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
