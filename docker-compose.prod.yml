services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

  frontend:
    image: plmrph/budget-helper-frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    env_file:
      - .env.frontend
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    image: plmrph/budget-helper-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - .env.backend
    ports:
      - "8000:8000"
    depends_on:
      dbmate:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    env_file:
      - .env.backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ynab_user -d ynab_db"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  dbmate:
    image: amacneil/dbmate:latest
    env_file:
      - .env.backend
    volumes:
      - ./backend/resource_layer/db:/db
    depends_on:
      postgres:
        condition: service_healthy
    command: ["up"]
    restart: "no"

volumes:
  postgres_data:
